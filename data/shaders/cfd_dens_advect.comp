#version 450

#include "common.glsl"

void main()
{
    ivec2 pos = ivec2(gl_GlobalInvocationID.xy);
    uint index =
            gl_GlobalInvocationID.y * ubo.gridSize.x + gl_GlobalInvocationID.x;
    uint readIndex = pc.readBufferOffset + index;
    uint writeIndex = pc.writeBufferOffset + index;
    int boundary = data[readIndex].boundary.x;
    float density = data[readIndex].density;

    if(pos.x >= ubo.gridSize.x || pos.y >= ubo.gridSize.y)
    {
        return;
    }

    if(boundary == 0)
    {
        float dt0 = ubo.time * float(ubo.gridSize.x);
        vec2 xy = vec2(pos) - dt0 * data[readIndex].velocity;

        if(xy.x < 0.5)
            xy.x = 0.5;
        if(xy.x > float(ubo.gridSize.x) + 0.5)
            xy.x = float(ubo.gridSize.x) + 0.5;
        int i0 = int(xy.x);
        int i1 = i0 + 1;

        if(xy.y < 0.5)
            xy.y = 0.5;
        if(xy.y > float(ubo.gridSize.y) + 0.5)
            xy.y = float(ubo.gridSize.y) + 0.5;
        int j0 = int(xy.y);
        int j1 = j0 + 1;

        float s1 = xy.x - float(i0);
        float s0 = 1.0 - s1;
        float t1 = xy.y - float(j0);
        float t0 = 1.0 - t1;

        GridCell cell_i0_j0 = getCell(ivec2(i0, j0), ivec2(0, 0));
        GridCell cell_i0_j1 = getCell(ivec2(i0, j1), ivec2(0, 0));
        GridCell cell_i1_j0 = getCell(ivec2(i1, j0), ivec2(0, 0));
        GridCell cell_i1_j1 = getCell(ivec2(i1, j1), ivec2(0, 0));

        density = s0 * (t0 * cell_i0_j0.density + t1 * cell_i0_j1.density)
                  + s1 * (t0 * cell_i1_j0.density + t1 * cell_i1_j1.density);
    }

    barrier();

    if(pos.x == 0)
    {
        density = getCell(pos, ivec2(1, 0)).density;
    }
    else if(pos.x == ubo.gridSize.x - 1)
    {
        density = getCell(pos, ivec2(-1, 0)).density;
    }
    else if(pos.y == 0)
    {
        density = getCell(pos, ivec2(0, 1)).density;
    }
    else if(pos.y == ubo.gridSize.y - 1)
    {
        density = getCell(pos, ivec2(0, -1)).density;
    }
    else if(pos.x == 0 && pos.y == 0) // top-left corner
    {
        density = (getCell(pos, ivec2(1, 0)).density
                   + getCell(pos, ivec2(0, 1)).density)
                  / 2.0;
    }
    else if(pos.x == ubo.gridSize.x - 1 && pos.y == 0) // top-right corner
    {
        density = (getCell(pos, ivec2(-1, 0)).density
                   + getCell(pos, ivec2(0, 1)).density)
                  / 2.0;
    }
    else if(pos.x == 0 && pos.y == ubo.gridSize.y - 1) // bottom-left corner
    {
        density = (getCell(pos, ivec2(1, 0)).density
                   + getCell(pos, ivec2(0, -1)).density)
                  / 2.0;
    }
    else if(pos.x == ubo.gridSize.x - 1
            && pos.y == ubo.gridSize.y - 1) // bottom-right corner
    {
        density = (getCell(pos, ivec2(-1, 0)).density
                   + getCell(pos, ivec2(0, -1)).density)
                  / 2.0;
    }

    data[writeIndex].density = density;
}
