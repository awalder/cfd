#version 450

#include "common.glsl"

void main()
{
    ivec2 pos = ivec2(gl_GlobalInvocationID.xy);
    uint index = gl_GlobalInvocationID.y * ubo.gridSize.x + gl_GlobalInvocationID.x;
    uint readIndex = pc.readBufferOffset + index;
    uint writeIndex = pc.writeBufferOffset + index;
    uint tempIndex = pc.tempBufferOffset + index;
    int boundary = data[readIndex].boundary.x;

    float density = 0.0;
    float density0 = data[tempIndex].density;

    if(pos.x >= ubo.gridSize.x || pos.y >= ubo.gridSize.y)
    {
        return;
    }

    // Handle boundary conditions
    if(boundary == 0)
    {
        GridCell left = getCell(pos, ivec2(-1, 0));
        GridCell right = getCell(pos, ivec2(1, 0));
        GridCell top = getCell(pos, ivec2(0, -1));
        GridCell bottom = getCell(pos, ivec2(0, 1));

        // clang-format off
        float diffusionRate = 0.000100;

        float a = ubo.time * diffusionRate
                  * float(ubo.gridSize.x * ubo.gridSize.y);

        density = (density0
                   + a * (left.density + right.density + top.density + bottom.density))
                  / (1.0 + 4.0 * a);
        // clang-format on
    }

    barrier();

    if(pos.x == 0)
    {
        density = getCell(pos, ivec2(1, 0)).density;
    }
    else if(pos.x == ubo.gridSize.x - 1)
    {
        density = getCell(pos, ivec2(-1, 0)).density;
    }
    else if(pos.y == 0)
    {
        density = getCell(pos, ivec2(0, 1)).density;
    }
    else if(pos.y == ubo.gridSize.y - 1)
    {
        density = getCell(pos, ivec2(0, -1)).density;
    }
    else if(pos.x == 0 && pos.y == 0) // top-left corner
    {
        density = (getCell(pos, ivec2(1, 0)).density + getCell(pos, ivec2(0, 1)).density) / 2.0;
    }
    else if(pos.x == ubo.gridSize.x - 1 && pos.y == 0) // top-right corner
    {
        density = (getCell(pos, ivec2(-1, 0)).density + getCell(pos, ivec2(0, 1)).density) / 2.0;
    }
    else if(pos.x == 0 && pos.y == ubo.gridSize.y - 1) // bottom-left corner
    {
        density = (getCell(pos, ivec2(1, 0)).density + getCell(pos, ivec2(0, -1)).density) / 2.0;
    }
    else if(pos.x == ubo.gridSize.x - 1 && pos.y == ubo.gridSize.y - 1) // bottom-right corner
    {
        density = (getCell(pos, ivec2(-1, 0)).density + getCell(pos, ivec2(0, -1)).density) / 2.0;
    }

    data[writeIndex].density = density;
}

