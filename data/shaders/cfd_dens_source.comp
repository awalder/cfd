#version 450

#include "common.glsl"

void main()
{
    ivec2 pos = ivec2(gl_GlobalInvocationID.xy);
    uint index =
            gl_GlobalInvocationID.y * ubo.gridSize.x + gl_GlobalInvocationID.x;
    uint readIndex = pc.readBufferOffset + index;
    uint writeIndex = pc.writeBufferOffset + index;

    if(pos.x >= ubo.gridSize.x || pos.y >= ubo.gridSize.y)
    {
        return;
    }

    if(data[readIndex].boundary.x != 0)
    {
        return;
    }

    // Add source to the density
    float source = 0.0;  // initialize source term to 0
    float dt = ubo.time; // replace with your actual time step

    // Define the position and size of the source square
    ivec2 sourcePos = ubo.gridSize / 2; // middle of the grid
    int sourceSize = 10;                // 10x10 square

    float density = data[readIndex].density;
    // float density = 0.0;
    density = clamp(density, 0.0, 100.0);

    // Check if the current cell is within the source square
    if(ubo.enabled == 1  && abs(pos.x - sourcePos.x) < sourceSize / 2
       && abs(pos.y - sourcePos.y) < sourceSize / 2)
    {
        source = 100.0;
        density += dt * source;
    }

    data[writeIndex].density = density;
}
